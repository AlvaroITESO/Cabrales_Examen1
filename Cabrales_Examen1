# Author: Luis Pizano
# Date: Jan 25, 2018
# Description: Array3[i] = Array1[i] + Array2[i];
.data 
	Array1: .word 1 2 3 0 0 0 0 0  # Array1 in Memory
	Array2: .word 4 5 6 0 0 0 0 0 # Array2 in Memory
	Array3: .word 7 8 9 0 0 0 0 0
	Vector: .word 1 2 3 0 0 0 0 0
	Result: .word 0 0 0 0 0 0 0 0   # Array3 in Memory
.text
main:


	la $s1, Array1 # Loading an address
	la $s2, Array2  # Loading an address
	la $s3, Array3  # Loading an address
	la $s4, Vector
	la $s5, Result
	
	addi $s6, $zero, 3 # N
	addi $s7, $zero, 0 #Counter I
	addi $a1, $zero, 0 #Counter J
	
	
	
	beq $s7, $s6, loop
	loop:
	beq $a1, $s6, loop2
	loop2:
	lw $t0,0($s5)
	beq $s7,0, PrimerArreglo
	beq $s7,1, SegundoArreglo
	beq $s7,2, TercerArreglo
	 
	
	
	PrimerArreglo:
	lw $t1, 0($s1)
	lw $t2, 0($s4)
	mult  $t1, $t2
	mflo $t3
	add $s5, $s5,$t3
	addi $s1, $s1, 4
	addi $s1, $s4, 4
	addi $a1, $a1, 1
	beq $a1, 3, SubirCounter
	
	SegundoArreglo:
	lw $t1, 0($s2)
	lw $t2, 0($s4)
	mult  $t1, $t2
	mflo $t3
	add $s5, $s5,$t3
	addi $s2, $s2, 4
	addi $s2, $s4, 4
	addi $a1, $a1, 1
	beq $a1, 3, SubirCounter
	
	TercerArreglo:
	lw $t1, 0($s3)
	lw $t2, 0($s4)
	mult  $t1, $t2
	mflo $t3
	add $s5, $s5,$t3
	addi $s3, $s3, 4
	addi $s3, $s4, 4
	addi $a1, $a1, 1
	beq $a1, 3, SubirCounter
	
	
	SubirCounter:
	addi $s7,$s7,1
	beq $a1, 3, exit
	j loop2
	
	
	exit:
	
	
	
	
	
	

